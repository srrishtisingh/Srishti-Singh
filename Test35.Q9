//Q9 The Messenger's Path
//Check if path exists from (0,0) to (n-1,m-1) in grid with 0=free,1=blocked using BFS.

import java.util.*;
public class Q9_The_Messengers_Path {
    public static boolean canReach(int[][] grid) {
        int n=grid.length,m=grid[0].length;
        if(grid[0][0]==1) return false;
        boolean[][] vis = new boolean[n][m];
        int[][] dirs = {{1,0},{-1,0},{0,1},{0,-1}};
        Queue<int[]>q=new LinkedList<>();
        q.add(new int[]{0,0}); vis[0][0]=true;
        while(!q.isEmpty()){
            int[] p=q.poll();
            if(p[0]==n-1 && p[1]==m-1) return true;
            for(int[] d:dirs){
                int ni=p[0]+d[0], nj=p[1]+d[1];
                if(ni>=0 && nj>=0 && ni<n && nj<m && !vis[ni][nj] && grid[ni][nj]==0){
                    vis[ni][nj]=true; q.add(new int[]{ni,nj});
                }
            }
        }
        return false;
    }
    public static void main(String[] args) {
        int[][] g = {{0,0,0},{0,1,0},{0,0,0}};
        System.out.println(canReach(g)); // true
    }
}
