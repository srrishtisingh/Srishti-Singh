//Q3 Potion Mixing (Two Sum)
//Return two indices whose values add to target. Uses a hashmap for O(n).

import java.util.*;
public class Q3_Potion_Mixing_Two_Sum {
    public static int[] twoSum(int[] arr, int target) {
        Map<Integer,Integer> map = new HashMap<>();
        for (int i=0;i<arr.length;i++) {
            int need = target - arr[i];
            if (map.containsKey(need)) return new int[]{map.get(need), i};
            map.put(arr[i], i);
        }
        return new int[]{-1,-1};
    }
    public static void main(String[] args) {
        int[] arr = {3,2,4,7};
        int[] res = twoSum(arr, 6);
        System.out.println("(" + res[0] + "," + res[1] + ")"); // (1,2) or similar
    }
}
